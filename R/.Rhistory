library(httr)
?GET
retrieve_countries = function(){
return(httr::GET('https://world.openfoodfacts.org/countries.json'))
}
retrieve_countries()
x = retrieve_countries()
x
print(x)
str(x)
x$output
content(x)
content(x, "text")
?content
content(x, "parsed")
content(x, "parsed")[1]
x = httr::GET('https://static.openfoodfacts.org/data/taxonomies/countries.json')
x
content(x, "parsed")
for (i in x){}
for (i in x){if (i$country_code_2){print(i$country_code_2)}}
for (i in x){print(i)}
for (i in x$country_code_2){print(i)}
str(x)
str(content(x))
content(x)
library(jsonlite)
jsonlite::fromJSON(txt=content(x))
jsonlite::fromJSON(txt=https://static.openfoodfacts.org/data/taxonomies/countries.json)
jsonlite::fromJSON(txt='https://static.openfoodfacts.org/data/taxonomies/countries.json')
jsonlite::fromJSON(txt='https://static.openfoodfacts.org/data/taxonomies/countries.json', method='C')
jsonlite::fromJSON(file='https://static.openfoodfacts.org/data/taxonomies/countries.json', method='C')
jsonlite::fromJSON(file='https://static.openfoodfacts.org/data/taxonomies/countries.json')
x = jsonlite::fromJSON(txt='https://static.openfoodfacts.org/data/taxonomies/countries.json')
x
??jsonlite
x = jsonlite::fromJSON(txt='https://static.openfoodfacts.org/data/taxonomies/countries.json', simplifyDataFrame=TRUE)
x
x = jsonlite::fromJSON(txt='https://static.openfoodfacts.org/data/taxonomies/countries.json', flatten=TRUE)
x
x[1]
x[2]
x[1][1]
x[1][2]
x[1]$country_code_2
x[1]$`en:eritrea`$country_code_2
x[1]$`en:eritrea`$country_code_2$en
x[1][1]$country_code_2$en
x[1,1]$country_code_2$en
x[1][1]$country_code_2$en
x[1][1]
x[1][1][1]
x[1]$`en:eritrea`$country_code_2$en
x[2]]$`en:eritrea`$country_code_2$en
x[2]$`en:eritrea`$country_code_2$en
retrieve_countries = function(){
x = httr::GET('https://static.openfoodfacts.org/data/taxonomies/countries.json')
x
return(y)
}
return(paste0('https://', country, '.openfoodfacts.org/api/v0/', '.json'))
build_URL = function(country = 'world'){
return(paste0('https://', country, '.openfoodfacts.org/api/v0/', '.json'))
}
build_URL()
x
x = retrieve_countries()
x = jsonlite::fromJSON(txt='https://static.openfoodfacts.org/data/taxonomies/countries.json')
x
x[1]
str(x[1])
str(x[1][1])
str(unlist(x[1]))
unlist(x[1])
names(x[1])
y = names(x[1])
y
x[1]$`en:eritrea`
x[1]$y
x[1]$`y`
x[1]['en:aritrea']
x[1]['en:eritrea']
x[1][y]
x[1][names(x[1])]
x[1][names(x[1])]$country_code_2
x[1][names(x[1])]$country_code_2$en
x[1][names(x[1])]['country_code_2']['en']
x[1][names(x[1])]
x[1][names(x[1])]['country_code_2']
x[1][names(x[1])]$country_code_2
x[1][names(x[1])]
x[1]$names(x[1])
x[1]
x[1]$names(x[1])
x[1][names(x[1])]
names(x[1])
x[1]$`names(x[1])`
y = names(x[1])
x[1]$y
x[1][y]
x[1]
str(x[1])
x[1]$`en:eritrea`$country_code_2$en
x[1]$(names(x[1]))$country_code_2$en
x[1][names(x[1])]$country_code_2$en
x[1][names(x[1])]
x[1]['en:eritrea']
x[1]['en:eritrea', country_code_2]
x[1]['en:eritrea', 'country_code_2']
x[1]['en:eritrea', 'country_code_2', 'en']
x[1]['en:eritrea']['country_code_2']['en']
type(x)
class(x)
x[[1]]['en:eritrea']['country_code_2']['en']
x[[1]]
x[[1]][[1]]
x[[1]][[2]]
x[[2]][[2]]
x[[1]][['en:eritrea']]
x[[1]]['en:eritrea']
x[[1]]
x[[1]]$country_code_2
x[[1]]$country_code_2$en
x[[2]]$country_code_2$en
length(x)
retrieve_countries = function(){
x = jsonlite::fromJSON(txt='https://static.openfoodfacts.org/data/taxonomies/countries.json')
y = c()
for (i in 1:length(x)){
if (x[[i]]$country_code_2$en){
y = c(y, x[[i]]$country_code_2$en)
}
}
return(y)
}
retrieve_countries()
for (i in 1:length(x)){
y = c(y, x[[i]]$country_code_2$en)
}
retrieve_countries = function(){
x = jsonlite::fromJSON(txt='https://static.openfoodfacts.org/data/taxonomies/countries.json')
y = c()
for (i in 1:length(x)){
y = c(y, x[[i]]$country_code_2$en)
}
return(y)
}
retrieve_countries()
retrieve_countries = function(){
x = jsonlite::fromJSON(txt='https://static.openfoodfacts.org/data/taxonomies/countries.json')
y = c()
for (i in 1:length(x)){
y = c(y, tolower(x[[i]]$country_code_2$en))
}
return(y)
}
retrieve_countries()
